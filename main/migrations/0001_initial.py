# Generated by Django 2.2 on 2021-04-11 04:02

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalFees',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
                ('value', models.FloatField()),
                ('reference', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'order_additional_fees',
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merchant_id', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'product_categories',
            },
        ),
        migrations.CreateModel(
            name='CustomerAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.IntegerField()),
                ('default', models.BooleanField(default=False)),
                ('provinsi', models.CharField(max_length=100)),
                ('kabupaten', models.CharField(max_length=100)),
                ('kecamatan', models.CharField(max_length=100)),
                ('postcode', models.CharField(max_length=100)),
                ('alamat', models.TextField(null=True)),
            ],
            options={
                'db_table': 'customers_address',
            },
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('birth_date', models.CharField(max_length=10)),
                ('phone', models.CharField(max_length=20)),
                ('is_seller', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('date_created', models.DateField(auto_now_add=True)),
                ('time_created', models.TimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'customers',
            },
        ),
        migrations.CreateModel(
            name='Merchants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='merchant/')),
                ('description', models.TextField(blank=True, null=True)),
                ('address', models.TextField()),
                ('date_created', models.DateField(auto_now_add=True)),
                ('time_created', models.TimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'merchants',
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField()),
                ('customer_id', models.IntegerField()),
                ('pre_total', models.FloatField()),
                ('total', models.FloatField()),
                ('is_pay', models.BooleanField(default=False)),
                ('date_pay', models.DateField(null=True)),
                ('time_pay', models.TimeField(null=True)),
                ('date_created', models.DateField(auto_now_add=True)),
                ('time_created', models.TimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'orders',
            },
        ),
        migrations.CreateModel(
            name='ProductMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField()),
                ('image', models.FileField(upload_to='product/%Y/%m/')),
            ],
            options={
                'db_table': 'product_media',
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merchant_id', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('price', models.FloatField()),
                ('stocks', models.IntegerField(default=1)),
                ('category_id', models.IntegerField()),
                ('date_created', models.DateField(auto_now_add=True)),
                ('time_created', models.TimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='ProductSpecifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'product_specifications',
            },
        ),
        migrations.CreateModel(
            name='ProductTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'product_tags',
            },
        ),
        migrations.CreateModel(
            name='ProductVarians',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=100)),
                ('value_is_number', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'product_varians',
            },
        ),
        migrations.CreateModel(
            name='Promo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.FloatField()),
                ('is_percent', models.BooleanField(default=False)),
                ('supplier', models.CharField(choices=[('app', 'app'), ('merchant', 'merchant')], max_length=100)),
                ('supplier_id', models.IntegerField()),
                ('ref_id', models.IntegerField()),
                ('date_created', models.DateField(auto_now_add=True)),
                ('time_created', models.TimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'promo',
            },
        ),
        migrations.CreateModel(
            name='References',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('value', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'references',
            },
        ),
        migrations.CreateModel(
            name='Sellers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.IntegerField()),
                ('nik', models.CharField(max_length=50, unique=True)),
                ('ktp_image', models.ImageField(upload_to='ktp/%Y/%m/')),
            ],
            options={
                'db_table': 'sellers',
            },
        ),
        migrations.CreateModel(
            name='SubtractionFees',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
                ('value', models.FloatField()),
                ('reference', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'order_subtraction_fees',
            },
        ),
        migrations.CreateModel(
            name='Vouchers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('value', models.FloatField()),
                ('is_percent', models.BooleanField(default=False)),
                ('supplier', models.CharField(choices=[('app', 'app'), ('merchant', 'merchant')], max_length=100)),
                ('supplier_id', models.IntegerField()),
                ('ref_id', models.IntegerField()),
                ('date_created', models.DateField(auto_now_add=True)),
                ('time_created', models.TimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'vouchers',
            },
        ),
    ]
